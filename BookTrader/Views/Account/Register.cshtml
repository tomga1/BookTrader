@using BookTrader.ViewModels;
@model RegisterViewModel;

@{
    ViewData["Title"] = "Registro";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}


<div class="account-container">
    <div class="account-box">
        <h2 class="text-align-content-center mb-4">Registro</h2>
        <form asp-action="Register" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Password" class="form-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="ConfirmPassword" class="form-label"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="PaisId" class="form-label">País</label>
                <select asp-for="PaisId" class="form-select" asp-items="Model.Paises" id="pais-select">
                    <option value="">-- Selecciona un país --</option>
                </select>
                <span asp-validation-for="PaisId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="ProvinciaId" class="form-label">Provincia</label>
                <select asp-for="ProvinciaId" class="form-select" asp-items="Model.Provincias" id="provincia-select">
                    <option value="">-- Selecciona una provincia --</option>
                </select>
                <span asp-validation-for="ProvinciaId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="LocalidadId" class="form-label">Localidad</label>
                <select asp-for="LocalidadId" class="form-select" asp-items="Model.Localidades" id="localidad-select">
                    <option value="">-- Selecciona una localidad --</option>
                </select>
                <span asp-validation-for="LocalidadId" class="text-danger"></span>
            </div>

            
            <input type="submit" value="Registro" class="btn btn-success w-100 p-2" />
            <p class="text-center mt-2">
                Tienes una cuenta? <a asp-controller="Account" asp-action="Login" class="text-decoration-none">Login</a>
            </p>
            <div class="text-center">
                <a asp-controller="Home" asp-action="Index" style="margin-top: 10px" class="btn btn-secondary w-100 p-2">Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }

    <script>
        document.getElementById("pais-select").addEventListener("change", function () {
            var paisId = this.value;
            var provinciaSelect = document.getElementById("provincia-select");

            // Limpiar provincias actuales
            provinciaSelect.innerHTML = '<option value="">-- Selecciona una provincia --</option>';

            if (paisId) {
                fetch(`/Account/GetProvincias?paisId=${paisId}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(function (provincia) {
                            var option = document.createElement("option");
                            option.value = provincia.value;
                            option.text = provincia.text;
                            provinciaSelect.appendChild(option);
                        });
                    })
                    .catch(error => console.error("Error al cargar provincias:", error));
            }
        });
    </script>
    <script>
        document.getElementById("provincia-select").addEventListener("change", function () {
            var provinciaId = this.value;
            var localidadSelect = document.getElementById("localidad-select");

            // Limpiar localidades actuales
            localidadSelect.innerHTML = '<option value="">-- Selecciona una localidad --</option>';

            if (provinciaId) {
                fetch(`/Account/GetLocalidades?provinciaId=${provinciaId}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(function (localidad) {
                            var option = document.createElement("option");
                            option.value = localidad.value;
                            option.text = localidad.text;
                            localidadSelect.appendChild(option);
                        });
                    })
                    .catch(error => console.error("Error al cargar localidades:", error));
            }
        });
    </script>


}

}