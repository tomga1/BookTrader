@model BookTrader.Models.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    bool puedeEnviar = User.Identity.IsAuthenticated || User.IsInRole("Admin");

}

<div class="text-center">
    <h1 class="display-4">BookTrader</h1>
</div>

<form id="formFiltroLibros">
    @Html.AntiForgeryToken()
</form>


<div class="container-fluid mb-5">
    <div class="row">

        <aside class="col-md-2 bg-light p-3 border-end d-none d-md-block" style="aside-body">
            <div class="accordion" id="filtrosCategorias">
                <h3>Categorías</h3>
                @foreach (var categoria in Model.Categorias)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingCategoria_@categoria.Id">
                            <button class="accordion-button collapsed"
                                    type="button"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#collapseCategoria_@categoria.Id">
                                @categoria.Nombre
                            </button>
                        </h2>
                        <div id="collapseCategoria_@categoria.Id"
                             class="accordion-collapse collapse"
                             data-bs-parent="#filtrosCategorias">
                            <div class="accordion-body" style="acordionbody">
                                @if (categoria.SubCategorias != null && categoria.SubCategorias.Any())
                                {
                                    <ul class="list-group">
                                        @foreach (var sub in categoria.SubCategorias)
                                        {
                                            <li class="list-group-item">
                                                <input type="checkbox" id="subcategoria_@sub.Id" value="@sub.Id" />
                                                <label for="subcategoria_@sub.Id">
                                                    @(sub.Nombre.Length >24 ? sub.Nombre.Substring(0,24) + "..." : sub.Nombre)
                                                    </label>
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="text-muted">No hay subcategorías</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </aside>




        <div class="col-10">
            <div class="row" id="contenedor-libros">

                @foreach (var libro in Model.LibrosPaginados.Items)
                {
                    <div class="col-md-auto mb-3">
                        <div class="card" style="width: 18rem;">
                            <img src="@libro.ImagenUrl" class="card-img-top img-fija" alt="@libro.Nombre">
                            <div class="card-body">
                                <h5 class="card-title" title="@libro.Nombre">
                                    @(libro.Nombre.Length > 24 ? libro.Nombre.Substring(0, 24) + "..." : libro.Nombre)
                                </h5>
                                <p class="card-text" title="@libro.Autor">
                                    @(libro.Autor.Length > 24 ? libro.Autor.Substring(0, 24) + "..." : libro.Autor)
                                </p>

                                <p class="card-text" title="@libro.Editorial">
                                    <strong>Editorial:</strong>
                                    @(libro.Editorial.Length > 24 ? libro.Editorial.Substring(0, 24) + "..." : libro.Editorial)
                                </p>
                                <p class="card-text fw-bold"><strong>Precio:</strong> $@libro.Precio</p>
                                <li class="list-group-item fw-bold"><strong>Estado:</strong> @libro.Condicion?.Nombre</li>
                                <li class="list-group-item fw-bold"><strong>Formato:</strong> @libro.Formato?.Nombre</li>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"><strong>Categoría:</strong> @libro.Categoria?.Nombre</li>
                                <li class="list-group-item"><strong>Sub-Categoria:</strong> @libro.SubCategorias?.Nombre</li>
                                <li class="list-group-item">
                                    <strong>Ubicación:</strong> @libro.Publicador?.Localidad?.Nombre,
                                    @libro.Publicador?.Localidad?.Provincia?.Nombre,
                                    @libro.Publicador?.Localidad?.Provincia?.Pais?.Nombre
                                </li>
                                <p><strong>Idioma:</strong> @libro.Idioma?.Nombre</p>

                            </ul>
                            <div class="card-body">
                                <a href="#" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#modalLibro_@libro.Id">Más Info</a>
                                <a href="#" class="btn btn-success" onclick="EnviarMailAlVendedor(@libro.Id, '@puedeEnviar') ; return false;">
                                    Lo quiero!
                                </a>
                            </div>
                        </div>
                    </div>

                    <!-- MODAL -->
                    <div class="modal fade" id="modalLibro_@libro.Id" tabindex="-1" aria-labelledby="modalLabel_@libro.Id" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-scrollable">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="modalLabel_@libro.Id">@libro.Nombre </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                                </div>
                                <div class="modal-body">
                                    <p><strong>Autor:</strong> @libro.Autor</p>
                                    <p><strong>Editorial:</strong> @libro.Editorial</p>
                                    <p><strong>ISBN:</strong> @libro.ISBN</p>
                                    <p><strong>Páginas:</strong> @libro.cantPaginas</p>
                                    <p><strong>Estado del libro:</strong> @libro.Condicion?.Nombre</p>
                                    <p><strong>Descripción:</strong><br /> @libro.Descripcion</p>
                                    <p><strong>Reseña:</strong><br /> @libro.MasInfo</p>
                                    <li class="list-group-item"><strong>Publicado por:</strong> @libro.Publicador?.NombreCompleto</li>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>



        <div class="d-flex justify-content-center mt-4">
            <nav>
                <ul class="pagination">
                    @if (Model.LibrosPaginados.TienePaginaAnterior)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-route-pagina="@(Model.LibrosPaginados.PaginaActual - 1)" asp-route-searchString="@ViewData["SearchString"]">Anterior</a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.LibrosPaginados.TotalPaginas; i++)
                    {
                        <li class="page-item @(i == Model.LibrosPaginados.PaginaActual ? "active" : "")">
                            <a class="page-link" asp-route-pagina="@i" asp-route-searchString="@ViewData["SearchString"]">@i</a>
                        </li>
                    }

                    @if (Model.LibrosPaginados.TienePaginaSiguiente)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-route-pagina="@(Model.LibrosPaginados.PaginaActual + 1)" asp-route-searchString="@ViewData["SearchString"]">Siguiente</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>



    </div>




</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        @if (TempData["ErrorSwal"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: '@Html.Raw(TempData["ErrorSwal"])'
                });
            </text>
        }
    </script>
}

<script>
    document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
        checkbox.addEventListener('change', () => {
            const idsSeleccionados = Array.from(document.querySelectorAll('input[type="checkbox"]:checked'))
                .map(cb => parseInt(cb.value));

            fetch('/Home/FiltrarLibrosPorCategorias', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(idsSeleccionados)
            })
                .then(response => response.text())
                .then(html => {
                    document.querySelector('#contenedor-libros').innerHTML = html;
                })
                .catch(error => console.error('Error al filtrar libros:', error));
        });
    });
</script>
